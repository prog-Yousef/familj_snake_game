{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yosef\\\\snake_gmae\\\\src\\\\SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { ChevronUp, ChevronDown, ChevronLeft, ChevronRight, Play, Pause, RotateCcw, Volume2, VolumeX } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 15;\nconst INITIAL_SNAKE = [{\n  x: 7,\n  y: 7\n}];\nconst INITIAL_DIRECTION = 'RIGHT';\nconst INITIAL_SPEED = 150;\nconst SPEED_INCREMENT = 0.1;\nconst POWER_UPS = {\n  NORMAL: {\n    color: 'bg-red-500',\n    points: 1,\n    probability: 0.7\n  },\n  SPEED: {\n    color: 'bg-green-500',\n    points: 2,\n    probability: 0.1\n  },\n  // e.g. 10%\n  MULTIPLIER: {\n    color: 'bg-yellow-500',\n    points: 3,\n    probability: 0.1\n  },\n  // e.g. 10%\n  SHIELD: {\n    color: 'bg-blue-500',\n    points: 1,\n    probability: 0.1\n  } // e.g. 10%\n};\nconst SnakeGame = () => {\n  _s();\n  const [snake, setSnake] = useState(INITIAL_SNAKE);\n  const [food, setFood] = useState({\n    x: 10,\n    y: 10,\n    type: 'NORMAL'\n  });\n  const [direction, setDirection] = useState(INITIAL_DIRECTION);\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(() => {\n    const saved = localStorage.getItem('snakeHighScore');\n    return saved ? parseInt(saved) : 0;\n  });\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [gameSpeed, setGameSpeed] = useState(INITIAL_SPEED);\n  const [hasShield, setHasShield] = useState(false);\n  const [scoreMultiplier, setScoreMultiplier] = useState(1);\n  const [isMuted, setIsMuted] = useState(false);\n  const [touchStart, setTouchStart] = useState({\n    x: 0,\n    y: 0\n  });\n  const gameLoopRef = useRef();\n  const audioContextRef = useRef();\n\n  // Initialize audio context\n  useEffect(() => {\n    if (!isMuted && !audioContextRef.current) {\n      try {\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      } catch (e) {\n        console.log('Audio not supported');\n      }\n    }\n  }, [isMuted]);\n\n  // Play sound effect\n  const playSound = useCallback((frequency, duration = 100) => {\n    if (isMuted || !audioContextRef.current) return;\n    try {\n      const oscillator = audioContextRef.current.createOscillator();\n      const gainNode = audioContextRef.current.createGain();\n      oscillator.connect(gainNode);\n      gainNode.connect(audioContextRef.current.destination);\n      oscillator.frequency.setValueAtTime(frequency, audioContextRef.current.currentTime);\n      oscillator.type = 'square';\n      gainNode.gain.setValueAtTime(0.1, audioContextRef.current.currentTime);\n      gainNode.gain.exponentialRampToValueAtTime(0.01, audioContextRef.current.currentTime + duration / 1000);\n      oscillator.start(audioContextRef.current.currentTime);\n      oscillator.stop(audioContextRef.current.currentTime + duration / 1000);\n    } catch (e) {\n      console.log('Audio playback failed');\n    }\n  }, [isMuted]);\n\n  // Generate random food position\n  const generateFood = useCallback(() => {\n    let newFoodPosition;\n    do {\n      newFoodPosition = {\n        x: Math.floor(Math.random() * GRID_SIZE),\n        y: Math.floor(Math.random() * GRID_SIZE)\n      };\n    } while (snake.some(segment => segment.x === newFoodPosition.x && segment.y === newFoodPosition.y));\n    const rand = Math.random();\n    let cumulativeProbability = 0;\n    let foodType = 'NORMAL'; // Default to normal\n\n    for (const type in POWER_UPS) {\n      cumulativeProbability += POWER_UPS[type].probability;\n      if (rand < cumulativeProbability) {\n        foodType = type;\n        break;\n      }\n    }\n    return {\n      ...newFoodPosition,\n      type: foodType\n    };\n  }, [snake]);\n\n  // Handle food consumption\n  const handleFoodConsumption = useCallback(foodType => {\n    const basePoints = POWER_UPS[foodType].points;\n    const points = basePoints * scoreMultiplier;\n    setScore(prev => prev + points);\n    playSound(440, 150);\n    switch (foodType) {\n      case 'SPEED':\n        setGameSpeed(prev => Math.max(50, prev * 0.8));\n        setTimeout(() => setGameSpeed(prev => prev / 0.8), 5000);\n        break;\n      case 'MULTIPLIER':\n        setScoreMultiplier(2);\n        setTimeout(() => setScoreMultiplier(1), 8000);\n        break;\n      case 'SHIELD':\n        setHasShield(true);\n        setTimeout(() => setHasShield(false), 10000);\n        break;\n    }\n  }, [scoreMultiplier, playSound]);\n\n  // Move snake\n  const moveSnake = useCallback(() => {\n    if (isPaused || isGameOver) return;\n    setSnake(currentSnake => {\n      const head = {\n        ...currentSnake[0]\n      };\n      switch (direction) {\n        case 'UP':\n          head.y -= 1;\n          break;\n        case 'DOWN':\n          head.y += 1;\n          break;\n        case 'LEFT':\n          head.x -= 1;\n          break;\n        case 'RIGHT':\n          head.x += 1;\n          break;\n      }\n\n      // Wall collision\n      if (head.x < 0 || head.x >= GRID_SIZE || head.y < 0 || head.y >= GRID_SIZE) {\n        if (hasShield) {\n          setHasShield(false);\n          playSound(200, 300);\n          return currentSnake;\n        } else {\n          setIsGameOver(true);\n          playSound(150, 500);\n          return currentSnake;\n        }\n      }\n\n      // Self collision\n      if (currentSnake.some(segment => segment.x === head.x && segment.y === head.y)) {\n        if (hasShield) {\n          setHasShield(false);\n          playSound(200, 300);\n          return currentSnake;\n        } else {\n          setIsGameOver(true);\n          playSound(150, 500);\n          return currentSnake;\n        }\n      }\n      const newSnake = [head, ...currentSnake];\n\n      // Food collision\n      if (head.x === food.x && head.y === food.y) {\n        handleFoodConsumption(food.type);\n        setFood(generateFood());\n        return newSnake;\n      }\n      return newSnake.slice(0, -1);\n    });\n  }, [direction, isPaused, isGameOver, food, hasShield, handleFoodConsumption, generateFood, playSound]);\n\n  // Game loop\n  useEffect(() => {\n    if (!isGameOver && !isPaused) {\n      gameLoopRef.current = setTimeout(moveSnake, gameSpeed);\n    }\n    return () => clearTimeout(gameLoopRef.current);\n  }, [moveSnake, gameSpeed, isGameOver, isPaused]);\n\n  // Update high score\n  useEffect(() => {\n    if (score > highScore) {\n      setHighScore(score);\n      localStorage.setItem('snakeHighScore', score.toString());\n    }\n  }, [score, highScore]);\n\n  // Increase speed based on score\n  useEffect(() => {\n    const newSpeed = Math.max(50, INITIAL_SPEED - Math.floor(score / 5) * (INITIAL_SPEED * SPEED_INCREMENT));\n    setGameSpeed(newSpeed);\n  }, [score]);\n\n  // Keyboard controls\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (isGameOver) return;\n      switch (e.key) {\n        case 'ArrowUp':\n        case 'w':\n        case 'W':\n          e.preventDefault();\n          if (direction !== 'DOWN') setDirection('UP');\n          break;\n        case 'ArrowDown':\n        case 's':\n        case 'S':\n          e.preventDefault();\n          if (direction !== 'UP') setDirection('DOWN');\n          break;\n        case 'ArrowLeft':\n        case 'a':\n        case 'A':\n          e.preventDefault();\n          if (direction !== 'RIGHT') setDirection('LEFT');\n          break;\n        case 'ArrowRight':\n        case 'd':\n        case 'D':\n          e.preventDefault();\n          if (direction !== 'LEFT') setDirection('RIGHT');\n          break;\n        case ' ':\n          e.preventDefault();\n          setIsPaused(prev => !prev);\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [direction, isGameOver]);\n\n  // Touch controls\n  const handleTouchStart = e => {\n    const touch = e.touches[0];\n    setTouchStart({\n      x: touch.clientX,\n      y: touch.clientY\n    });\n  };\n  const handleTouchEnd = e => {\n    if (isGameOver) return;\n    const touch = e.changedTouches[0];\n    const deltaX = touch.clientX - touchStart.x;\n    const deltaY = touch.clientY - touchStart.y;\n    const minSwipeDistance = 30; // Reduced for better responsiveness\n\n    if (Math.abs(deltaX) > Math.abs(deltaY)) {\n      // Horizontal swipe\n      if (Math.abs(deltaX) > minSwipeDistance) {\n        if (deltaX > 0 && direction !== 'LEFT') setDirection('RIGHT');else if (deltaX < 0 && direction !== 'RIGHT') setDirection('LEFT');\n      }\n    } else {\n      // Vertical swipe\n      if (Math.abs(deltaY) > minSwipeDistance) {\n        if (deltaY > 0 && direction !== 'UP') setDirection('DOWN');else if (deltaY < 0 && direction !== 'DOWN') setDirection('UP');\n      }\n    }\n  };\n\n  // Reset game\n  const resetGame = () => {\n    setSnake(INITIAL_SNAKE);\n    setFood(generateFood()); // Use generateFood to get a random initial food\n    setDirection(INITIAL_DIRECTION);\n    setScore(0);\n    setIsGameOver(false);\n    setIsPaused(false);\n    setGameSpeed(INITIAL_SPEED);\n    setHasShield(false);\n    setScoreMultiplier(1);\n  };\n\n  // Virtual controls\n  const handleDirectionChange = newDirection => {\n    if (isGameOver) return;\n    const opposites = {\n      'UP': 'DOWN',\n      'DOWN': 'UP',\n      'LEFT': 'RIGHT',\n      'RIGHT': 'LEFT'\n    };\n    if (direction !== opposites[newDirection]) {\n      setDirection(newDirection);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 p-4 flex flex-col items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl md:text-5xl font-bold text-white mb-2 bg-gradient-to-r from-indigo-400 to-purple-400 bg-clip-text text-transparent\",\n          children: \"Snake Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center items-center gap-6 text-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg\",\n            children: [\"Score: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold text-yellow-400\",\n              children: score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg\",\n            children: [\"High: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold text-purple-400\",\n              children: highScore\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center gap-4 mb-4 h-8\",\n        children: [\" \", hasShield && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-500 text-white px-3 py-1 rounded-full text-sm animate-pulse\",\n          children: \"\\uD83D\\uDEE1\\uFE0F Shield Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), scoreMultiplier > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-yellow-500 text-white px-3 py-1 rounded-full text-sm animate-pulse\",\n          children: \"\\u26A1 2x Multiplier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), isPaused && !isGameOver &&\n        /*#__PURE__*/\n        // Only show if not game over\n        _jsxDEV(\"div\", {\n          className: \"bg-orange-500 text-white px-3 py-1 rounded-full text-sm\",\n          children: \"\\u23F8\\uFE0F Paused\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid gap-0 bg-gray-800 border-2 border-gray-600 rounded-lg p-2 mb-4 aspect-square max-w-md mx-auto\",\n          style: {\n            gridTemplateColumns: `repeat(${GRID_SIZE}, 1fr)`\n          },\n          onTouchStart: handleTouchStart,\n          onTouchEnd: handleTouchEnd,\n          children: Array.from({\n            length: GRID_SIZE * GRID_SIZE\n          }).map((_, index) => {\n            const x = index % GRID_SIZE;\n            const y = Math.floor(index / GRID_SIZE);\n            const isSnakeHead = snake.length > 0 && snake[0].x === x && snake[0].y === y;\n            const isSnakeBody = snake.slice(1).some(segment => segment.x === x && segment.y === y);\n            const isFood = food.x === x && food.y === y;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `\n                    aspect-square rounded-sm transition-all duration-150\n                    ${isSnakeHead ? 'bg-gradient-to-br from-indigo-400 to-indigo-600 animate-pulse shadow-lg' : ''}\n                    ${isSnakeBody ? 'bg-gradient-to-br from-indigo-500 to-indigo-700 transform scale-95' : ''}\n                    ${isFood ? `${POWER_UPS[food.type].color} animate-pulse shadow-lg rounded-full` : ''}\n                    ${!isSnakeHead && !isSnakeBody && !isFood ? 'bg-gray-700' : ''}\n                  `\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 bg-black bg-opacity-75 flex items-center justify-center rounded-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-3xl font-bold mb-4\",\n              children: \"Game Over!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xl mb-4\",\n              children: [\"Final Score: \", score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: resetGame,\n              className: \"bg-indigo-600 hover:bg-indigo-700 text-white px-6 py-3 rounded-lg font-semibold transition-colors flex items-center gap-2 mx-auto\",\n              children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this), \"Play Again\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center gap-4 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsPaused(!isPaused),\n          disabled: isGameOver,\n          className: \"bg-green-600 hover:bg-green-700 disabled:bg-gray-600 text-white px-4 py-2 rounded-lg font-semibold transition-colors flex items-center gap-2\",\n          children: [isPaused ? /*#__PURE__*/_jsxDEV(Play, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(Pause, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 46\n          }, this), isPaused ? 'Resume' : 'Pause']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          className: \"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-semibold transition-colors flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), \"Reset\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsMuted(!isMuted),\n          className: \"bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg font-semibold transition-colors flex items-center gap-2\",\n          children: isMuted ? /*#__PURE__*/_jsxDEV(VolumeX, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(Volume2, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-3 gap-2 max-w-xs mx-auto\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDirectionChange('UP'),\n            className: \"bg-gray-700 hover:bg-gray-600 text-white p-4 rounded-lg flex items-center justify-center transition-colors active:bg-gray-500 aspect-square\",\n            children: /*#__PURE__*/_jsxDEV(ChevronUp, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDirectionChange('LEFT'),\n            className: \"bg-gray-700 hover:bg-gray-600 text-white p-4 rounded-lg flex items-center justify-center transition-colors active:bg-gray-500 aspect-square\",\n            children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center aspect-square\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsPaused(p => !p) /* Corrected setIsPaused */,\n              disabled: isGameOver,\n              className: \"bg-gray-700 hover:bg-gray-600 text-white p-3 rounded-full flex items-center justify-center transition-colors active:bg-gray-500 h-12 w-12\" /* Adjusted size */,\n              children: isPaused ? /*#__PURE__*/_jsxDEV(Play, {\n                size: 18\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 33\n              }, this) : /*#__PURE__*/_jsxDEV(Pause, {\n                size: 18\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 54\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDirectionChange('RIGHT'),\n            className: \"bg-gray-700 hover:bg-gray-600 text-white p-4 rounded-lg flex items-center justify-center transition-colors active:bg-gray-500 aspect-square\",\n            children: /*#__PURE__*/_jsxDEV(ChevronRight, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDirectionChange('DOWN'),\n            className: \"bg-gray-700 hover:bg-gray-600 text-white p-4 rounded-lg flex items-center justify-center transition-colors active:bg-gray-500 aspect-square\",\n            children: /*#__PURE__*/_jsxDEV(ChevronDown, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-400 text-sm mt-8\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1\",\n          children: \"\\uD83C\\uDFAE Use arrow keys, WASD, or swipe to move\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1\",\n          children: [\"\\uD83C\\uDF4E \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-400\",\n            children: \"Red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 34\n          }, this), \": Normal | \\uD83C\\uDF40 \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-green-400\",\n            children: \"Green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 89\n          }, this), \": Speed | \\u2B50 \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-yellow-400\",\n            children: \"Yellow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 146\n          }, this), \": 2x Score | \\uD83D\\uDEE1\\uFE0F \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-blue-400\",\n            children: \"Blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 210\n          }, this), \": Shield\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Press SPACE to pause \\u2022 Speed increases every 5 points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n};\n_s(SnakeGame, \"93VX9fp5bFxvbafI0EXaeAyP1mk=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","ChevronUp","ChevronDown","ChevronLeft","ChevronRight","Play","Pause","RotateCcw","Volume2","VolumeX","jsxDEV","_jsxDEV","GRID_SIZE","INITIAL_SNAKE","x","y","INITIAL_DIRECTION","INITIAL_SPEED","SPEED_INCREMENT","POWER_UPS","NORMAL","color","points","probability","SPEED","MULTIPLIER","SHIELD","SnakeGame","_s","snake","setSnake","food","setFood","type","direction","setDirection","score","setScore","highScore","setHighScore","saved","localStorage","getItem","parseInt","isGameOver","setIsGameOver","isPaused","setIsPaused","gameSpeed","setGameSpeed","hasShield","setHasShield","scoreMultiplier","setScoreMultiplier","isMuted","setIsMuted","touchStart","setTouchStart","gameLoopRef","audioContextRef","current","window","AudioContext","webkitAudioContext","e","console","log","playSound","frequency","duration","oscillator","createOscillator","gainNode","createGain","connect","destination","setValueAtTime","currentTime","gain","exponentialRampToValueAtTime","start","stop","generateFood","newFoodPosition","Math","floor","random","some","segment","rand","cumulativeProbability","foodType","handleFoodConsumption","basePoints","prev","max","setTimeout","moveSnake","currentSnake","head","newSnake","slice","clearTimeout","setItem","toString","newSpeed","handleKeyPress","key","preventDefault","addEventListener","removeEventListener","handleTouchStart","touch","touches","clientX","clientY","handleTouchEnd","changedTouches","deltaX","deltaY","minSwipeDistance","abs","resetGame","handleDirectionChange","newDirection","opposites","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","gridTemplateColumns","onTouchStart","onTouchEnd","Array","from","length","map","_","index","isSnakeHead","isSnakeBody","isFood","onClick","size","disabled","p","_c","$RefreshReg$"],"sources":["C:/Users/yosef/snake_gmae/src/SnakeGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { ChevronUp, ChevronDown, ChevronLeft, ChevronRight, Play, Pause, RotateCcw, Volume2, VolumeX } from 'lucide-react';\r\n\r\nconst GRID_SIZE = 15;\r\nconst INITIAL_SNAKE = [{ x: 7, y: 7 }];\r\nconst INITIAL_DIRECTION = 'RIGHT';\r\nconst INITIAL_SPEED = 150;\r\nconst SPEED_INCREMENT = 0.1;\r\n\r\nconst POWER_UPS = {\r\n  NORMAL: { color: 'bg-red-500', points: 1, probability: 0.7 },\r\n  SPEED: { color: 'bg-green-500', points: 2, probability: 0.1 }, // e.g. 10%\r\n  MULTIPLIER: { color: 'bg-yellow-500', points: 3, probability: 0.1 }, // e.g. 10%\r\n  SHIELD: { color: 'bg-blue-500', points: 1, probability: 0.1 } // e.g. 10%\r\n};\r\n\r\nconst SnakeGame = () => {\r\n  const [snake, setSnake] = useState(INITIAL_SNAKE);\r\n  const [food, setFood] = useState({ x: 10, y: 10, type: 'NORMAL' });\r\n  const [direction, setDirection] = useState(INITIAL_DIRECTION);\r\n  const [score, setScore] = useState(0);\r\n  const [highScore, setHighScore] = useState(() => {\r\n    const saved = localStorage.getItem('snakeHighScore');\r\n    return saved ? parseInt(saved) : 0;\r\n  });\r\n  const [isGameOver, setIsGameOver] = useState(false);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const [gameSpeed, setGameSpeed] = useState(INITIAL_SPEED);\r\n  const [hasShield, setHasShield] = useState(false);\r\n  const [scoreMultiplier, setScoreMultiplier] = useState(1);\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [touchStart, setTouchStart] = useState({ x: 0, y: 0 });\r\n\r\n  const gameLoopRef = useRef();\r\n  const audioContextRef = useRef();\r\n\r\n  // Initialize audio context\r\n  useEffect(() => {\r\n    if (!isMuted && !audioContextRef.current) {\r\n      try {\r\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n      } catch (e) {\r\n        console.log('Audio not supported');\r\n      }\r\n    }\r\n  }, [isMuted]);\r\n\r\n  // Play sound effect\r\n  const playSound = useCallback((frequency, duration = 100) => {\r\n    if (isMuted || !audioContextRef.current) return;\r\n    \r\n    try {\r\n      const oscillator = audioContextRef.current.createOscillator();\r\n      const gainNode = audioContextRef.current.createGain();\r\n      \r\n      oscillator.connect(gainNode);\r\n      gainNode.connect(audioContextRef.current.destination);\r\n      \r\n      oscillator.frequency.setValueAtTime(frequency, audioContextRef.current.currentTime);\r\n      oscillator.type = 'square';\r\n      \r\n      gainNode.gain.setValueAtTime(0.1, audioContextRef.current.currentTime);\r\n      gainNode.gain.exponentialRampToValueAtTime(0.01, audioContextRef.current.currentTime + duration / 1000);\r\n      \r\n      oscillator.start(audioContextRef.current.currentTime);\r\n      oscillator.stop(audioContextRef.current.currentTime + duration / 1000);\r\n    } catch (e) {\r\n      console.log('Audio playback failed');\r\n    }\r\n  }, [isMuted]);\r\n\r\n  // Generate random food position\r\n  const generateFood = useCallback(() => {\r\n    let newFoodPosition;\r\n    do {\r\n      newFoodPosition = {\r\n        x: Math.floor(Math.random() * GRID_SIZE),\r\n        y: Math.floor(Math.random() * GRID_SIZE),\r\n      };\r\n    } while (snake.some(segment => segment.x === newFoodPosition.x && segment.y === newFoodPosition.y));\r\n\r\n    const rand = Math.random();\r\n    let cumulativeProbability = 0;\r\n    let foodType = 'NORMAL'; // Default to normal\r\n\r\n    for (const type in POWER_UPS) {\r\n        cumulativeProbability += POWER_UPS[type].probability;\r\n        if (rand < cumulativeProbability) {\r\n            foodType = type;\r\n            break;\r\n        }\r\n    }\r\n    \r\n    return {...newFoodPosition, type: foodType};\r\n  }, [snake]);\r\n\r\n  // Handle food consumption\r\n  const handleFoodConsumption = useCallback((foodType) => {\r\n    const basePoints = POWER_UPS[foodType].points;\r\n    const points = basePoints * scoreMultiplier;\r\n    \r\n    setScore(prev => prev + points);\r\n    playSound(440, 150);\r\n    \r\n    switch (foodType) {\r\n      case 'SPEED':\r\n        setGameSpeed(prev => Math.max(50, prev * 0.8));\r\n        setTimeout(() => setGameSpeed(prev => prev / 0.8), 5000);\r\n        break;\r\n      case 'MULTIPLIER':\r\n        setScoreMultiplier(2);\r\n        setTimeout(() => setScoreMultiplier(1), 8000);\r\n        break;\r\n      case 'SHIELD':\r\n        setHasShield(true);\r\n        setTimeout(() => setHasShield(false), 10000);\r\n        break;\r\n    }\r\n  }, [scoreMultiplier, playSound]);\r\n\r\n  // Move snake\r\n  const moveSnake = useCallback(() => {\r\n    if (isPaused || isGameOver) return;\r\n\r\n    setSnake(currentSnake => {\r\n      const head = { ...currentSnake[0] };\r\n      \r\n      switch (direction) {\r\n        case 'UP': head.y -= 1; break;\r\n        case 'DOWN': head.y += 1; break;\r\n        case 'LEFT': head.x -= 1; break;\r\n        case 'RIGHT': head.x += 1; break;\r\n      }\r\n\r\n      // Wall collision\r\n      if (head.x < 0 || head.x >= GRID_SIZE || head.y < 0 || head.y >= GRID_SIZE) {\r\n        if (hasShield) {\r\n          setHasShield(false);\r\n          playSound(200, 300);\r\n          return currentSnake;\r\n        } else {\r\n          setIsGameOver(true);\r\n          playSound(150, 500);\r\n          return currentSnake;\r\n        }\r\n      }\r\n\r\n      // Self collision\r\n      if (currentSnake.some(segment => segment.x === head.x && segment.y === head.y)) {\r\n        if (hasShield) {\r\n          setHasShield(false);\r\n          playSound(200, 300);\r\n          return currentSnake;\r\n        } else {\r\n          setIsGameOver(true);\r\n          playSound(150, 500);\r\n          return currentSnake;\r\n        }\r\n      }\r\n\r\n      const newSnake = [head, ...currentSnake];\r\n\r\n      // Food collision\r\n      if (head.x === food.x && head.y === food.y) {\r\n        handleFoodConsumption(food.type);\r\n        setFood(generateFood());\r\n        return newSnake;\r\n      }\r\n\r\n      return newSnake.slice(0, -1);\r\n    });\r\n  }, [direction, isPaused, isGameOver, food, hasShield, handleFoodConsumption, generateFood, playSound]);\r\n\r\n  // Game loop\r\n  useEffect(() => {\r\n    if (!isGameOver && !isPaused) {\r\n      gameLoopRef.current = setTimeout(moveSnake, gameSpeed);\r\n    }\r\n    return () => clearTimeout(gameLoopRef.current);\r\n  }, [moveSnake, gameSpeed, isGameOver, isPaused]);\r\n\r\n  // Update high score\r\n  useEffect(() => {\r\n    if (score > highScore) {\r\n      setHighScore(score);\r\n      localStorage.setItem('snakeHighScore', score.toString());\r\n    }\r\n  }, [score, highScore]);\r\n\r\n  // Increase speed based on score\r\n  useEffect(() => {\r\n    const newSpeed = Math.max(50, INITIAL_SPEED - Math.floor(score / 5) * (INITIAL_SPEED * SPEED_INCREMENT));\r\n    setGameSpeed(newSpeed);\r\n  }, [score]);\r\n\r\n  // Keyboard controls\r\n  useEffect(() => {\r\n    const handleKeyPress = (e) => {\r\n      if (isGameOver) return;\r\n      \r\n      switch (e.key) {\r\n        case 'ArrowUp':\r\n        case 'w':\r\n        case 'W':\r\n          e.preventDefault();\r\n          if (direction !== 'DOWN') setDirection('UP');\r\n          break;\r\n        case 'ArrowDown':\r\n        case 's':\r\n        case 'S':\r\n          e.preventDefault();\r\n          if (direction !== 'UP') setDirection('DOWN');\r\n          break;\r\n        case 'ArrowLeft':\r\n        case 'a':\r\n        case 'A':\r\n          e.preventDefault();\r\n          if (direction !== 'RIGHT') setDirection('LEFT');\r\n          break;\r\n        case 'ArrowRight':\r\n        case 'd':\r\n        case 'D':\r\n          e.preventDefault();\r\n          if (direction !== 'LEFT') setDirection('RIGHT');\r\n          break;\r\n        case ' ':\r\n          e.preventDefault();\r\n          setIsPaused(prev => !prev);\r\n          break;\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyPress);\r\n    return () => window.removeEventListener('keydown', handleKeyPress);\r\n  }, [direction, isGameOver]);\r\n\r\n  // Touch controls\r\n  const handleTouchStart = (e) => {\r\n    const touch = e.touches[0];\r\n    setTouchStart({ x: touch.clientX, y: touch.clientY });\r\n  };\r\n\r\n  const handleTouchEnd = (e) => {\r\n    if (isGameOver) return;\r\n    \r\n    const touch = e.changedTouches[0];\r\n    const deltaX = touch.clientX - touchStart.x;\r\n    const deltaY = touch.clientY - touchStart.y;\r\n    const minSwipeDistance = 30; // Reduced for better responsiveness\r\n\r\n    if (Math.abs(deltaX) > Math.abs(deltaY)) { // Horizontal swipe\r\n      if (Math.abs(deltaX) > minSwipeDistance) {\r\n        if (deltaX > 0 && direction !== 'LEFT') setDirection('RIGHT');\r\n        else if (deltaX < 0 && direction !== 'RIGHT') setDirection('LEFT');\r\n      }\r\n    } else { // Vertical swipe\r\n      if (Math.abs(deltaY) > minSwipeDistance) {\r\n        if (deltaY > 0 && direction !== 'UP') setDirection('DOWN');\r\n        else if (deltaY < 0 && direction !== 'DOWN') setDirection('UP');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Reset game\r\n  const resetGame = () => {\r\n    setSnake(INITIAL_SNAKE);\r\n    setFood(generateFood()); // Use generateFood to get a random initial food\r\n    setDirection(INITIAL_DIRECTION);\r\n    setScore(0);\r\n    setIsGameOver(false);\r\n    setIsPaused(false);\r\n    setGameSpeed(INITIAL_SPEED);\r\n    setHasShield(false);\r\n    setScoreMultiplier(1);\r\n  };\r\n\r\n  // Virtual controls\r\n  const handleDirectionChange = (newDirection) => {\r\n    if (isGameOver) return;\r\n    \r\n    const opposites = {\r\n      'UP': 'DOWN',\r\n      'DOWN': 'UP',\r\n      'LEFT': 'RIGHT',\r\n      'RIGHT': 'LEFT'\r\n    };\r\n    \r\n    if (direction !== opposites[newDirection]) {\r\n      setDirection(newDirection);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 p-4 flex flex-col items-center justify-center\">\r\n      <div className=\"max-w-2xl w-full\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-6\">\r\n          <h1 className=\"text-4xl md:text-5xl font-bold text-white mb-2 bg-gradient-to-r from-indigo-400 to-purple-400 bg-clip-text text-transparent\">\r\n            Snake Game\r\n          </h1>\r\n          <div className=\"flex justify-center items-center gap-6 text-white\">\r\n            <div className=\"text-lg\">Score: <span className=\"font-bold text-yellow-400\">{score}</span></div>\r\n            <div className=\"text-lg\">High: <span className=\"font-bold text-purple-400\">{highScore}</span></div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Status Indicators */}\r\n        <div className=\"flex justify-center items-center gap-4 mb-4 h-8\"> {/* Added fixed height */}\r\n          {hasShield && (\r\n            <div className=\"bg-blue-500 text-white px-3 py-1 rounded-full text-sm animate-pulse\">\r\n              🛡️ Shield Active\r\n            </div>\r\n          )}\r\n          {scoreMultiplier > 1 && (\r\n            <div className=\"bg-yellow-500 text-white px-3 py-1 rounded-full text-sm animate-pulse\">\r\n              ⚡ 2x Multiplier\r\n            </div>\r\n          )}\r\n          {isPaused && !isGameOver && ( // Only show if not game over\r\n            <div className=\"bg-orange-500 text-white px-3 py-1 rounded-full text-sm\">\r\n              ⏸️ Paused\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Game Board */}\r\n        <div className=\"relative\">\r\n          <div \r\n            className=\"grid gap-0 bg-gray-800 border-2 border-gray-600 rounded-lg p-2 mb-4 aspect-square max-w-md mx-auto\"\r\n            style={{ gridTemplateColumns: `repeat(${GRID_SIZE}, 1fr)` }}\r\n            onTouchStart={handleTouchStart}\r\n            onTouchEnd={handleTouchEnd}\r\n          >\r\n            {Array.from({ length: GRID_SIZE * GRID_SIZE }).map((_, index) => {\r\n              const x = index % GRID_SIZE;\r\n              const y = Math.floor(index / GRID_SIZE);\r\n              const isSnakeHead = snake.length > 0 && snake[0].x === x && snake[0].y === y;\r\n              const isSnakeBody = snake.slice(1).some(segment => segment.x === x && segment.y === y);\r\n              const isFood = food.x === x && food.y === y;\r\n\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className={`\r\n                    aspect-square rounded-sm transition-all duration-150\r\n                    ${isSnakeHead ? 'bg-gradient-to-br from-indigo-400 to-indigo-600 animate-pulse shadow-lg' : ''}\r\n                    ${isSnakeBody ? 'bg-gradient-to-br from-indigo-500 to-indigo-700 transform scale-95' : ''}\r\n                    ${isFood ? `${POWER_UPS[food.type].color} animate-pulse shadow-lg rounded-full` : ''}\r\n                    ${!isSnakeHead && !isSnakeBody && !isFood ? 'bg-gray-700' : ''}\r\n                  `}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {/* Game Over Overlay */}\r\n          {isGameOver && (\r\n            <div className=\"absolute inset-0 bg-black bg-opacity-75 flex items-center justify-center rounded-lg\">\r\n              <div className=\"text-center text-white\">\r\n                <h2 className=\"text-3xl font-bold mb-4\">Game Over!</h2>\r\n                <p className=\"text-xl mb-4\">Final Score: {score}</p>\r\n                <button\r\n                  onClick={resetGame}\r\n                  className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-6 py-3 rounded-lg font-semibold transition-colors flex items-center gap-2 mx-auto\"\r\n                >\r\n                  <RotateCcw size={20} />\r\n                  Play Again\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Controls */}\r\n        <div className=\"flex justify-center items-center gap-4 mb-6\">\r\n          <button\r\n            onClick={() => setIsPaused(!isPaused)}\r\n            disabled={isGameOver}\r\n            className=\"bg-green-600 hover:bg-green-700 disabled:bg-gray-600 text-white px-4 py-2 rounded-lg font-semibold transition-colors flex items-center gap-2\"\r\n          >\r\n            {isPaused ? <Play size={20} /> : <Pause size={20} />}\r\n            {isPaused ? 'Resume' : 'Pause'}\r\n          </button>\r\n          \r\n          <button\r\n            onClick={resetGame}\r\n            className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-semibold transition-colors flex items-center gap-2\"\r\n          >\r\n            <RotateCcw size={20} />\r\n            Reset\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => setIsMuted(!isMuted)}\r\n            className=\"bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg font-semibold transition-colors flex items-center gap-2\"\r\n          >\r\n            {isMuted ? <VolumeX size={20} /> : <Volume2 size={20} />}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Virtual D-Pad for Mobile */}\r\n        <div className=\"md:hidden\">\r\n          <div className=\"grid grid-cols-3 gap-2 max-w-xs mx-auto\"> {/* Adjusted max-w for better fit */}\r\n            <div></div>\r\n            <button\r\n              onClick={() => handleDirectionChange('UP')}\r\n              className=\"bg-gray-700 hover:bg-gray-600 text-white p-4 rounded-lg flex items-center justify-center transition-colors active:bg-gray-500 aspect-square\"\r\n            >\r\n              <ChevronUp size={24} />\r\n            </button>\r\n            <div></div>\r\n            <button\r\n              onClick={() => handleDirectionChange('LEFT')}\r\n              className=\"bg-gray-700 hover:bg-gray-600 text-white p-4 rounded-lg flex items-center justify-center transition-colors active:bg-gray-500 aspect-square\"\r\n            >\r\n              <ChevronLeft size={24} />\r\n            </button>\r\n             <div className=\"flex items-center justify-center aspect-square\"> \r\n                <button \r\n                    onClick={() => setIsPaused(p => !p)} /* Corrected setIsPaused */\r\n                    disabled={isGameOver}\r\n                    className=\"bg-gray-700 hover:bg-gray-600 text-white p-3 rounded-full flex items-center justify-center transition-colors active:bg-gray-500 h-12 w-12\" /* Adjusted size */\r\n                >\r\n                    {isPaused ? <Play size={18} /> : <Pause size={18} />}\r\n                </button>\r\n            </div>\r\n            <button\r\n              onClick={() => handleDirectionChange('RIGHT')}\r\n              className=\"bg-gray-700 hover:bg-gray-600 text-white p-4 rounded-lg flex items-center justify-center transition-colors active:bg-gray-500 aspect-square\"\r\n            >\r\n              <ChevronRight size={24} />\r\n            </button>\r\n            <div></div>\r\n            <button\r\n              onClick={() => handleDirectionChange('DOWN')}\r\n              className=\"bg-gray-700 hover:bg-gray-600 text-white p-4 rounded-lg flex items-center justify-center transition-colors active:bg-gray-500 aspect-square\"\r\n            >\r\n              <ChevronDown size={24} />\r\n            </button>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Instructions */}\r\n        <div className=\"text-center text-gray-400 text-sm mt-8\"> {/* Increased mt */}\r\n          <p className=\"mb-1\">🎮 Use arrow keys, WASD, or swipe to move</p>\r\n          <p className=\"mb-1\">🍎 <span className=\"text-red-400\">Red</span>: Normal | 🍀 <span className=\"text-green-400\">Green</span>: Speed | ⭐ <span className=\"text-yellow-400\">Yellow</span>: 2x Score | 🛡️ <span className=\"text-blue-400\">Blue</span>: Shield</p>\r\n          <p>Press SPACE to pause • Speed increases every 5 points</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SnakeGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}