{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yosef\\\\snake_gmae\\\\src\\\\SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { ChevronUp, ChevronDown, ChevronLeft, ChevronRight, Play, Pause, RotateCcw, Volume2, VolumeX } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 15;\nconst INITIAL_SNAKE = [{\n  x: 7,\n  y: 7\n}];\nconst INITIAL_DIRECTION = 'RIGHT';\nconst INITIAL_SPEED = 150;\nconst SPEED_INCREMENT = 0.1;\n\n// Barn Foto Snacke Feature Constants\nconst IMAGE_POPUP_SCORE_INTERVAL = 15;\nconst NUM_BARN_FOTOS = 21;\nconst IMAGE_POPUP_DURATION = 3000; // Total duration the panel is shown\n\nconst SNAKE_COLOR_THEMES = [{\n  head: 'bg-gradient-to-br from-indigo-400 to-indigo-600',\n  body: 'bg-gradient-to-br from-indigo-500 to-indigo-700'\n}, {\n  head: 'bg-gradient-to-br from-green-400 to-green-600',\n  body: 'bg-gradient-to-br from-green-500 to-green-700'\n}, {\n  head: 'bg-gradient-to-br from-pink-400 to-pink-600',\n  body: 'bg-gradient-to-br from-pink-500 to-pink-700'\n}, {\n  head: 'bg-gradient-to-br from-yellow-400 to-yellow-600',\n  body: 'bg-gradient-to-br from-yellow-500 to-yellow-700'\n}, {\n  head: 'bg-gradient-to-br from-teal-400 to-teal-600',\n  body: 'bg-gradient-to-br from-teal-500 to-teal-700'\n}];\nconst POWER_UPS = {\n  PIZZA: {\n    icon: '🍕',\n    points: 1,\n    probability: 0.35,\n    description: \"Pizza\"\n  },\n  HAMBURGER: {\n    icon: '🍔',\n    points: 1,\n    probability: 0.35,\n    description: \"Hamburger\"\n  },\n  SPEED: {\n    icon: '⚡️',\n    points: 2,\n    probability: 0.1,\n    description: \"Speed Boost\",\n    color: 'bg-green-500'\n  },\n  MULTIPLIER: {\n    icon: '✨',\n    points: 3,\n    probability: 0.1,\n    description: \"2x Score\",\n    color: 'bg-yellow-500'\n  },\n  SHIELD: {\n    icon: '🛡️',\n    points: 1,\n    probability: 0.1,\n    description: \"Shield\",\n    color: 'bg-blue-500'\n  }\n};\nconst getRandomFoodType = () => {\n  const rand = Math.random();\n  let cumulativeProbability = 0;\n  for (const type in POWER_UPS) {\n    cumulativeProbability += POWER_UPS[type].probability;\n    if (rand < cumulativeProbability) {\n      return type;\n    }\n  }\n  return 'PIZZA';\n};\nconst getRandomImageName = () => {\n  if (NUM_BARN_FOTOS === 0) return '';\n  const randomIndex = Math.floor(Math.random() * NUM_BARN_FOTOS) + 1;\n  return `${randomIndex}.jpg`;\n};\nconst SnakeGame = () => {\n  _s();\n  const [snake, setSnake] = useState(INITIAL_SNAKE);\n  const [food, setFood] = useState({\n    x: 10,\n    y: 10,\n    type: getRandomFoodType()\n  });\n  const [direction, setDirection] = useState(INITIAL_DIRECTION);\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(() => {\n    const saved = localStorage.getItem('snakeHighScore');\n    return saved ? parseInt(saved) : 0;\n  });\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [gameSpeed, setGameSpeed] = useState(INITIAL_SPEED);\n  const [hasShield, setHasShield] = useState(false);\n  const [scoreMultiplier, setScoreMultiplier] = useState(1);\n  const [isMuted, setIsMuted] = useState(false);\n  const [touchStart, setTouchStart] = useState({\n    x: 0,\n    y: 0\n  });\n  const [currentThemeIndex, setCurrentThemeIndex] = useState(0);\n  const [imagePopupVisible, setImagePopupVisible] = useState(false);\n  const [currentRandomImageName, setCurrentRandomImageName] = useState('');\n  const [nextImageScoreThreshold, setNextImageScoreThreshold] = useState(IMAGE_POPUP_SCORE_INTERVAL);\n  const gameLoopRef = useRef();\n  const audioContextRef = useRef();\n  const currentSnakeColor = SNAKE_COLOR_THEMES[currentThemeIndex];\n\n  // Initialize audio context\n  useEffect(() => {\n    if (!isMuted && !audioContextRef.current) {\n      try {\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      } catch (e) {\n        console.log('Audio not supported');\n      }\n    }\n  }, [isMuted]);\n\n  // Play sound effect\n  const playSound = useCallback((frequency, duration = 100) => {\n    if (isMuted || !audioContextRef.current) return;\n    try {\n      const oscillator = audioContextRef.current.createOscillator();\n      const gainNode = audioContextRef.current.createGain();\n      oscillator.connect(gainNode);\n      gainNode.connect(audioContextRef.current.destination);\n      oscillator.frequency.setValueAtTime(frequency, audioContextRef.current.currentTime);\n      oscillator.type = 'square';\n      gainNode.gain.setValueAtTime(0.1, audioContextRef.current.currentTime);\n      gainNode.gain.exponentialRampToValueAtTime(0.01, audioContextRef.current.currentTime + duration / 1000);\n      oscillator.start(audioContextRef.current.currentTime);\n      oscillator.stop(audioContextRef.current.currentTime + duration / 1000);\n    } catch (e) {\n      console.log('Audio playback failed');\n    }\n  }, [isMuted]);\n\n  // Generate random food position\n  const generateFood = useCallback(() => {\n    let newFoodPosition;\n    do {\n      newFoodPosition = {\n        x: Math.floor(Math.random() * GRID_SIZE),\n        y: Math.floor(Math.random() * GRID_SIZE)\n      };\n    } while (snake.some(segment => segment.x === newFoodPosition.x && segment.y === newFoodPosition.y));\n    return {\n      ...newFoodPosition,\n      type: getRandomFoodType()\n    };\n  }, [snake]);\n\n  // Handle food consumption\n  const handleFoodConsumption = useCallback(foodType => {\n    const basePoints = POWER_UPS[foodType].points;\n    const points = basePoints * scoreMultiplier;\n    setScore(prev => prev + points);\n    playSound(440, 150);\n    setCurrentThemeIndex(prev => (prev + 1) % SNAKE_COLOR_THEMES.length);\n    switch (foodType) {\n      case 'SPEED':\n        setGameSpeed(prev => Math.max(50, prev * 0.8));\n        setTimeout(() => setGameSpeed(prev => prev / 0.8), 5000);\n        break;\n      case 'MULTIPLIER':\n        setScoreMultiplier(2);\n        setTimeout(() => setScoreMultiplier(1), 8000);\n        break;\n      case 'SHIELD':\n        setHasShield(true);\n        setTimeout(() => setHasShield(false), 10000);\n        break;\n    }\n  }, [scoreMultiplier, playSound]);\n\n  // Move snake\n  const moveSnake = useCallback(() => {\n    if (isPaused || isGameOver) return;\n    setSnake(currentSnake => {\n      const head = {\n        ...currentSnake[0]\n      };\n      switch (direction) {\n        case 'UP':\n          head.y -= 1;\n          break;\n        case 'DOWN':\n          head.y += 1;\n          break;\n        case 'LEFT':\n          head.x -= 1;\n          break;\n        case 'RIGHT':\n          head.x += 1;\n          break;\n      }\n      if (head.x < 0 || head.x >= GRID_SIZE || head.y < 0 || head.y >= GRID_SIZE) {\n        if (hasShield) {\n          setHasShield(false);\n          playSound(200, 300);\n          return currentSnake;\n        } else {\n          setIsGameOver(true);\n          playSound(150, 500);\n          return currentSnake;\n        }\n      }\n      if (currentSnake.some(segment => segment.x === head.x && segment.y === head.y)) {\n        if (hasShield) {\n          setHasShield(false);\n          playSound(200, 300);\n          return currentSnake;\n        } else {\n          setIsGameOver(true);\n          playSound(150, 500);\n          return currentSnake;\n        }\n      }\n      const newSnake = [head, ...currentSnake];\n      if (head.x === food.x && head.y === food.y) {\n        handleFoodConsumption(food.type);\n        setFood(generateFood());\n        return newSnake;\n      }\n      return newSnake.slice(0, -1);\n    });\n  }, [direction, isPaused, isGameOver, food, hasShield, handleFoodConsumption, generateFood, playSound]);\n\n  // Game loop\n  useEffect(() => {\n    if (!isGameOver && !isPaused) {\n      gameLoopRef.current = setTimeout(moveSnake, gameSpeed);\n    }\n    return () => clearTimeout(gameLoopRef.current);\n  }, [moveSnake, gameSpeed, isGameOver, isPaused]);\n\n  // Update high score & Barn Foto Snacke popup trigger\n  useEffect(() => {\n    if (score > highScore) {\n      setHighScore(score);\n      localStorage.setItem('snakeHighScore', score.toString());\n    }\n    if (!imagePopupVisible && score > 0 && score >= nextImageScoreThreshold && NUM_BARN_FOTOS > 0) {\n      setImagePopupVisible(true);\n      setCurrentRandomImageName(getRandomImageName()); // Set a single random image for the popup session\n      playSound(660, 200);\n      setNextImageScoreThreshold(prevThreshold => prevThreshold + IMAGE_POPUP_SCORE_INTERVAL);\n      setTimeout(() => {\n        setImagePopupVisible(false);\n      }, IMAGE_POPUP_DURATION);\n    }\n  }, [score, highScore, nextImageScoreThreshold, imagePopupVisible, playSound]);\n\n  // Increase speed based on score\n  useEffect(() => {\n    const newSpeed = Math.max(50, INITIAL_SPEED - Math.floor(score / 5) * (INITIAL_SPEED * SPEED_INCREMENT));\n    setGameSpeed(newSpeed);\n  }, [score]);\n\n  // Keyboard controls\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (isGameOver) return;\n      switch (e.key) {\n        case 'ArrowUp':\n        case 'w':\n        case 'W':\n          e.preventDefault();\n          if (direction !== 'DOWN') setDirection('UP');\n          break;\n        case 'ArrowDown':\n        case 's':\n        case 'S':\n          e.preventDefault();\n          if (direction !== 'UP') setDirection('DOWN');\n          break;\n        case 'ArrowLeft':\n        case 'a':\n        case 'A':\n          e.preventDefault();\n          if (direction !== 'RIGHT') setDirection('LEFT');\n          break;\n        case 'ArrowRight':\n        case 'd':\n        case 'D':\n          e.preventDefault();\n          if (direction !== 'LEFT') setDirection('RIGHT');\n          break;\n        case ' ':\n          e.preventDefault();\n          setIsPaused(prev => !prev);\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [direction, isGameOver]);\n\n  // Touch controls\n  const handleTouchStart = e => {\n    const touch = e.touches[0];\n    setTouchStart({\n      x: touch.clientX,\n      y: touch.clientY\n    });\n  };\n  const handleTouchEnd = e => {\n    if (isGameOver) return;\n    const touch = e.changedTouches[0];\n    const deltaX = touch.clientX - touchStart.x;\n    const deltaY = touch.clientY - touchStart.y;\n    const minSwipeDistance = 30;\n    if (Math.abs(deltaX) > Math.abs(deltaY)) {\n      if (Math.abs(deltaX) > minSwipeDistance) {\n        if (deltaX > 0 && direction !== 'LEFT') setDirection('RIGHT');else if (deltaX < 0 && direction !== 'RIGHT') setDirection('LEFT');\n      }\n    } else {\n      if (Math.abs(deltaY) > minSwipeDistance) {\n        if (deltaY > 0 && direction !== 'UP') setDirection('DOWN');else if (deltaY < 0 && direction !== 'DOWN') setDirection('UP');\n      }\n    }\n  };\n\n  // Reset game\n  const resetGame = () => {\n    setSnake(INITIAL_SNAKE);\n    setFood(generateFood());\n    setDirection(INITIAL_DIRECTION);\n    setScore(0);\n    setIsGameOver(false);\n    setIsPaused(false);\n    setGameSpeed(INITIAL_SPEED);\n    setHasShield(false);\n    setScoreMultiplier(1);\n    setCurrentThemeIndex(0);\n    setImagePopupVisible(false);\n    setCurrentRandomImageName('');\n    setNextImageScoreThreshold(IMAGE_POPUP_SCORE_INTERVAL);\n  };\n\n  // Virtual controls\n  const handleDirectionChange = newDirection => {\n    if (isGameOver) return;\n    const opposites = {\n      'UP': 'DOWN',\n      'DOWN': 'UP',\n      'LEFT': 'RIGHT',\n      'RIGHT': 'LEFT'\n    };\n    if (direction !== opposites[newDirection]) setDirection(newDirection);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 p-4 flex flex-col md:flex-row items-center md:items-start justify-center gap-4 md:gap-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full md:max-w-md lg:max-w-lg flex-shrink-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-4xl md:text-5xl font-bold text-white mb-2 bg-gradient-to-r from-indigo-400 to-purple-400 bg-clip-text text-transparent\",\n            children: \"Snake Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center items-center gap-6 text-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg\",\n              children: [\"Score: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold text-yellow-400\",\n                children: score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg\",\n              children: [\"High: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold text-purple-400\",\n                children: highScore\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 48\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center items-center gap-4 mb-4 h-8\",\n          children: [hasShield && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-blue-500 text-white px-3 py-1 rounded-full text-sm animate-pulse\",\n            children: \"\\uD83D\\uDEE1\\uFE0F Shield Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this), scoreMultiplier > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-yellow-500 text-white px-3 py-1 rounded-full text-sm animate-pulse\",\n            children: \"\\u26A1 2x Multiplier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this), isPaused && !isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-orange-500 text-white px-3 py-1 rounded-full text-sm\",\n            children: \"\\u23F8\\uFE0F Paused\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid gap-0 bg-gray-800 border-2 border-gray-600 rounded-lg p-2 mb-4 aspect-square max-w-md mx-auto\",\n            style: {\n              gridTemplateColumns: `repeat(${GRID_SIZE}, 1fr)`\n            },\n            onTouchStart: handleTouchStart,\n            onTouchEnd: handleTouchEnd,\n            children: Array.from({\n              length: GRID_SIZE * GRID_SIZE\n            }).map((_, index) => {\n              const x = index % GRID_SIZE;\n              const y = Math.floor(index / GRID_SIZE);\n              const isSnakeHead = snake.length > 0 && snake[0].x === x && snake[0].y === y;\n              const isSnakeBody = snake.slice(1).some(segment => segment.x === x && segment.y === y);\n              const isFood = food.x === x && food.y === y;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `\n                        aspect-square rounded-sm transition-all duration-150\n                        ${isSnakeHead ? `${currentSnakeColor.head} animate-pulse shadow-lg` : ''}\n                        ${isSnakeBody ? `${currentSnakeColor.body} transform scale-95` : ''}\n                        ${isFood ? '' : ''} \n                        ${!isSnakeHead && !isSnakeBody && !isFood ? 'bg-gray-700' : ''}\n                    `,\n                children: isFood && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-2xl flex items-center justify-center h-full w-full animate-pulse\",\n                  children: POWER_UPS[food.type].icon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute inset-0 bg-black bg-opacity-75 flex items-center justify-center rounded-lg z-20\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center text-white\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-3xl font-bold mb-4\",\n                children: \"Game Over!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xl mb-4\",\n                children: [\"Final Score: \", score]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: resetGame,\n                className: \"bg-indigo-600 hover:bg-indigo-700 text-white px-6 py-3 rounded-lg font-semibold transition-colors flex items-center gap-2 mx-auto\",\n                children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 21\n                }, this), \"Play Again\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center items-center gap-4 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsPaused(!isPaused),\n            disabled: isGameOver,\n            className: \"bg-green-600 hover:bg-green-700 disabled:bg-gray-600 text-white px-4 py-2 rounded-lg font-semibold transition-colors flex items-center gap-2\",\n            children: [isPaused ? /*#__PURE__*/_jsxDEV(Play, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Pause, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 54\n            }, this), isPaused ? 'Resume' : 'Pause']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetGame,\n            className: \"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-semibold transition-colors flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 21\n            }, this), \" Reset\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsMuted(!isMuted),\n            className: \"bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg font-semibold transition-colors flex items-center gap-2\",\n            children: isMuted ? /*#__PURE__*/_jsxDEV(VolumeX, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 32\n            }, this) : /*#__PURE__*/_jsxDEV(Volume2, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"md:hidden\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-3 gap-2 max-w-xs mx-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDirectionChange('UP'),\n              className: \"bg-gray-700 hover:bg-gray-600 text-white p-4 rounded-lg flex items-center justify-center transition-colors active:bg-gray-500 aspect-square\",\n              children: /*#__PURE__*/_jsxDEV(ChevronUp, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 225\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDirectionChange('LEFT'),\n              className: \"bg-gray-700 hover:bg-gray-600 text-white p-4 rounded-lg flex items-center justify-center transition-colors active:bg-gray-500 aspect-square\",\n              children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 227\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-center aspect-square\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setIsPaused(p => !p),\n                disabled: isGameOver,\n                className: \"bg-gray-700 hover:bg-gray-600 text-white p-3 rounded-full flex items-center justify-center transition-colors active:bg-gray-500 h-12 w-12\",\n                children: isPaused ? /*#__PURE__*/_jsxDEV(Play, {\n                  size: 18\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(Pause, {\n                  size: 18\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDirectionChange('RIGHT'),\n              className: \"bg-gray-700 hover:bg-gray-600 text-white p-4 rounded-lg flex items-center justify-center transition-colors active:bg-gray-500 aspect-square\",\n              children: /*#__PURE__*/_jsxDEV(ChevronRight, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 228\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDirectionChange('DOWN'),\n              className: \"bg-gray-700 hover:bg-gray-600 text-white p-4 rounded-lg flex items-center justify-center transition-colors active:bg-gray-500 aspect-square\",\n              children: /*#__PURE__*/_jsxDEV(ChevronDown, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 227\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-gray-400 text-sm mt-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-1\",\n            children: \"\\uD83C\\uDFAE Use arrow keys, WASD, or swipe to move\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-1\",\n            children: [POWER_UPS.PIZZA.icon, \" & \", POWER_UPS.HAMBURGER.icon, \": Standard Food | \", POWER_UPS.SPEED.icon, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-green-400\",\n              children: POWER_UPS.SPEED.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 113\n            }, this), \" | \", POWER_UPS.MULTIPLIER.icon, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-yellow-400\",\n              children: POWER_UPS.MULTIPLIER.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 213\n            }, this), \" | \", POWER_UPS.SHIELD.icon, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-blue-400\",\n              children: POWER_UPS.SHIELD.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 315\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Press SPACE to pause \\u2022 Speed increases every 5 points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), imagePopupVisible && NUM_BARN_FOTOS > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full md:w-64 lg:w-80 xl:w-96 bg-gray-800 p-4 rounded-lg shadow-xl flex flex-col items-center justify-center self-center md:self-start mt-6 md:mt-0 order-first md:order-last\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-3 md:p-4 rounded-xl shadow-2xl w-full transform transition-all\",\n        children: [currentRandomImageName && /*#__PURE__*/_jsxDEV(\"img\", {\n          // Key helps React differentiate if the image name changes for some reason, ensuring re-render\n          src: `/barnfotosnake/${currentRandomImageName}`,\n          alt: \"Barn Foto Snacke Time!\",\n          className: \"w-full h-auto rounded-lg object-contain max-h-[60vh] md:max-h-[calc(100vh-250px)] animate-pulse\",\n          onError: e => {\n            e.target.style.display = 'none';\n            const parent = e.target.parentNode;\n            if (parent) {\n              const errorText = document.createElement('p');\n              errorText.textContent = `Image ${currentRandomImageName} not found! Make sure it is in public/barnfotosnake/`;\n              errorText.className = 'text-red-500 text-center p-2';\n              if (!parent.querySelector('.error-image-text')) {\n                errorText.classList.add('error-image-text');\n                parent.insertBefore(errorText, e.target);\n              }\n            }\n          }\n        }, currentRandomImageName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-lg md:text-xl font-bold mt-3 text-purple-600 animate-bounce\",\n          children: \"Snacke Time!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n};\n_s(SnakeGame, \"TXXmu+4zG1zmMhmivwirqSLyCZ8=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","ChevronUp","ChevronDown","ChevronLeft","ChevronRight","Play","Pause","RotateCcw","Volume2","VolumeX","jsxDEV","_jsxDEV","GRID_SIZE","INITIAL_SNAKE","x","y","INITIAL_DIRECTION","INITIAL_SPEED","SPEED_INCREMENT","IMAGE_POPUP_SCORE_INTERVAL","NUM_BARN_FOTOS","IMAGE_POPUP_DURATION","SNAKE_COLOR_THEMES","head","body","POWER_UPS","PIZZA","icon","points","probability","description","HAMBURGER","SPEED","color","MULTIPLIER","SHIELD","getRandomFoodType","rand","Math","random","cumulativeProbability","type","getRandomImageName","randomIndex","floor","SnakeGame","_s","snake","setSnake","food","setFood","direction","setDirection","score","setScore","highScore","setHighScore","saved","localStorage","getItem","parseInt","isGameOver","setIsGameOver","isPaused","setIsPaused","gameSpeed","setGameSpeed","hasShield","setHasShield","scoreMultiplier","setScoreMultiplier","isMuted","setIsMuted","touchStart","setTouchStart","currentThemeIndex","setCurrentThemeIndex","imagePopupVisible","setImagePopupVisible","currentRandomImageName","setCurrentRandomImageName","nextImageScoreThreshold","setNextImageScoreThreshold","gameLoopRef","audioContextRef","currentSnakeColor","current","window","AudioContext","webkitAudioContext","e","console","log","playSound","frequency","duration","oscillator","createOscillator","gainNode","createGain","connect","destination","setValueAtTime","currentTime","gain","exponentialRampToValueAtTime","start","stop","generateFood","newFoodPosition","some","segment","handleFoodConsumption","foodType","basePoints","prev","length","max","setTimeout","moveSnake","currentSnake","newSnake","slice","clearTimeout","setItem","toString","prevThreshold","newSpeed","handleKeyPress","key","preventDefault","addEventListener","removeEventListener","handleTouchStart","touch","touches","clientX","clientY","handleTouchEnd","changedTouches","deltaX","deltaY","minSwipeDistance","abs","resetGame","handleDirectionChange","newDirection","opposites","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","gridTemplateColumns","onTouchStart","onTouchEnd","Array","from","map","_","index","isSnakeHead","isSnakeBody","isFood","onClick","size","disabled","p","src","alt","onError","target","display","parent","parentNode","errorText","document","createElement","textContent","querySelector","classList","add","insertBefore","_c","$RefreshReg$"],"sources":["C:/Users/yosef/snake_gmae/src/SnakeGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { ChevronUp, ChevronDown, ChevronLeft, ChevronRight, Play, Pause, RotateCcw, Volume2, VolumeX } from 'lucide-react';\r\n\r\nconst GRID_SIZE = 15;\r\nconst INITIAL_SNAKE = [{ x: 7, y: 7 }];\r\nconst INITIAL_DIRECTION = 'RIGHT';\r\nconst INITIAL_SPEED = 150;\r\nconst SPEED_INCREMENT = 0.1;\r\n\r\n// Barn Foto Snacke Feature Constants\r\nconst IMAGE_POPUP_SCORE_INTERVAL = 15;\r\nconst NUM_BARN_FOTOS = 21; \r\nconst IMAGE_POPUP_DURATION = 3000; // Total duration the panel is shown\r\n\r\nconst SNAKE_COLOR_THEMES = [\r\n  { head: 'bg-gradient-to-br from-indigo-400 to-indigo-600', body: 'bg-gradient-to-br from-indigo-500 to-indigo-700' },\r\n  { head: 'bg-gradient-to-br from-green-400 to-green-600', body: 'bg-gradient-to-br from-green-500 to-green-700' },\r\n  { head: 'bg-gradient-to-br from-pink-400 to-pink-600', body: 'bg-gradient-to-br from-pink-500 to-pink-700' },\r\n  { head: 'bg-gradient-to-br from-yellow-400 to-yellow-600', body: 'bg-gradient-to-br from-yellow-500 to-yellow-700' },\r\n  { head: 'bg-gradient-to-br from-teal-400 to-teal-600', body: 'bg-gradient-to-br from-teal-500 to-teal-700' },\r\n];\r\n\r\nconst POWER_UPS = {\r\n  PIZZA: { icon: '🍕', points: 1, probability: 0.35, description: \"Pizza\" },\r\n  HAMBURGER: { icon: '🍔', points: 1, probability: 0.35, description: \"Hamburger\" },\r\n  SPEED: { icon: '⚡️', points: 2, probability: 0.1, description: \"Speed Boost\", color: 'bg-green-500' },\r\n  MULTIPLIER: { icon: '✨', points: 3, probability: 0.1, description: \"2x Score\", color: 'bg-yellow-500' },\r\n  SHIELD: { icon: '🛡️', points: 1, probability: 0.1, description: \"Shield\", color: 'bg-blue-500' }\r\n};\r\n\r\nconst getRandomFoodType = () => {\r\n  const rand = Math.random();\r\n  let cumulativeProbability = 0;\r\n  for (const type in POWER_UPS) {\r\n    cumulativeProbability += POWER_UPS[type].probability;\r\n    if (rand < cumulativeProbability) {\r\n      return type;\r\n    }\r\n  }\r\n  return 'PIZZA'; \r\n};\r\n\r\nconst getRandomImageName = () => { \r\n  if (NUM_BARN_FOTOS === 0) return '';\r\n  const randomIndex = Math.floor(Math.random() * NUM_BARN_FOTOS) + 1;\r\n  return `${randomIndex}.jpg`;\r\n};\r\n\r\nconst SnakeGame = () => {\r\n  const [snake, setSnake] = useState(INITIAL_SNAKE);\r\n  const [food, setFood] = useState({ x: 10, y: 10, type: getRandomFoodType() });\r\n  const [direction, setDirection] = useState(INITIAL_DIRECTION);\r\n  const [score, setScore] = useState(0);\r\n  const [highScore, setHighScore] = useState(() => {\r\n    const saved = localStorage.getItem('snakeHighScore');\r\n    return saved ? parseInt(saved) : 0;\r\n  });\r\n  const [isGameOver, setIsGameOver] = useState(false);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const [gameSpeed, setGameSpeed] = useState(INITIAL_SPEED);\r\n  const [hasShield, setHasShield] = useState(false);\r\n  const [scoreMultiplier, setScoreMultiplier] = useState(1);\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [touchStart, setTouchStart] = useState({ x: 0, y: 0 });\r\n  const [currentThemeIndex, setCurrentThemeIndex] = useState(0);\r\n\r\n  const [imagePopupVisible, setImagePopupVisible] = useState(false); \r\n  const [currentRandomImageName, setCurrentRandomImageName] = useState('');\r\n  const [nextImageScoreThreshold, setNextImageScoreThreshold] = useState(IMAGE_POPUP_SCORE_INTERVAL);\r\n\r\n  const gameLoopRef = useRef();\r\n  const audioContextRef = useRef();\r\n  const currentSnakeColor = SNAKE_COLOR_THEMES[currentThemeIndex];\r\n\r\n  // Initialize audio context\r\n  useEffect(() => {\r\n    if (!isMuted && !audioContextRef.current) {\r\n      try {\r\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n      } catch (e) {\r\n        console.log('Audio not supported');\r\n      }\r\n    }\r\n  }, [isMuted]);\r\n\r\n  // Play sound effect\r\n  const playSound = useCallback((frequency, duration = 100) => {\r\n    if (isMuted || !audioContextRef.current) return;\r\n    \r\n    try {\r\n      const oscillator = audioContextRef.current.createOscillator();\r\n      const gainNode = audioContextRef.current.createGain();\r\n      \r\n      oscillator.connect(gainNode);\r\n      gainNode.connect(audioContextRef.current.destination);\r\n      \r\n      oscillator.frequency.setValueAtTime(frequency, audioContextRef.current.currentTime);\r\n      oscillator.type = 'square';\r\n      \r\n      gainNode.gain.setValueAtTime(0.1, audioContextRef.current.currentTime);\r\n      gainNode.gain.exponentialRampToValueAtTime(0.01, audioContextRef.current.currentTime + duration / 1000);\r\n      \r\n      oscillator.start(audioContextRef.current.currentTime);\r\n      oscillator.stop(audioContextRef.current.currentTime + duration / 1000);\r\n    } catch (e) {\r\n      console.log('Audio playback failed');\r\n    }\r\n  }, [isMuted]);\r\n\r\n  // Generate random food position\r\n  const generateFood = useCallback(() => {\r\n    let newFoodPosition;\r\n    do {\r\n      newFoodPosition = {\r\n        x: Math.floor(Math.random() * GRID_SIZE),\r\n        y: Math.floor(Math.random() * GRID_SIZE),\r\n      };\r\n    } while (snake.some(segment => segment.x === newFoodPosition.x && segment.y === newFoodPosition.y));\r\n    \r\n    return {...newFoodPosition, type: getRandomFoodType()};\r\n  }, [snake]);\r\n\r\n  // Handle food consumption\r\n  const handleFoodConsumption = useCallback((foodType) => {\r\n    const basePoints = POWER_UPS[foodType].points;\r\n    const points = basePoints * scoreMultiplier;\r\n    \r\n    setScore(prev => prev + points);\r\n    playSound(440, 150);\r\n    setCurrentThemeIndex(prev => (prev + 1) % SNAKE_COLOR_THEMES.length);\r\n    \r\n    switch (foodType) {\r\n      case 'SPEED':\r\n        setGameSpeed(prev => Math.max(50, prev * 0.8));\r\n        setTimeout(() => setGameSpeed(prev => prev / 0.8), 5000);\r\n        break;\r\n      case 'MULTIPLIER':\r\n        setScoreMultiplier(2);\r\n        setTimeout(() => setScoreMultiplier(1), 8000);\r\n        break;\r\n      case 'SHIELD':\r\n        setHasShield(true);\r\n        setTimeout(() => setHasShield(false), 10000);\r\n        break;\r\n    }\r\n  }, [scoreMultiplier, playSound]);\r\n\r\n  // Move snake\r\n  const moveSnake = useCallback(() => {\r\n    if (isPaused || isGameOver) return;\r\n\r\n    setSnake(currentSnake => {\r\n      const head = { ...currentSnake[0] };\r\n      \r\n      switch (direction) {\r\n        case 'UP': head.y -= 1; break;\r\n        case 'DOWN': head.y += 1; break;\r\n        case 'LEFT': head.x -= 1; break;\r\n        case 'RIGHT': head.x += 1; break;\r\n      }\r\n\r\n      if (head.x < 0 || head.x >= GRID_SIZE || head.y < 0 || head.y >= GRID_SIZE) {\r\n        if (hasShield) {\r\n          setHasShield(false);\r\n          playSound(200, 300);\r\n          return currentSnake;\r\n        } else {\r\n          setIsGameOver(true);\r\n          playSound(150, 500);\r\n          return currentSnake;\r\n        }\r\n      }\r\n\r\n      if (currentSnake.some(segment => segment.x === head.x && segment.y === head.y)) {\r\n        if (hasShield) {\r\n          setHasShield(false);\r\n          playSound(200, 300);\r\n          return currentSnake;\r\n        } else {\r\n          setIsGameOver(true);\r\n          playSound(150, 500);\r\n          return currentSnake;\r\n        }\r\n      }\r\n\r\n      const newSnake = [head, ...currentSnake];\r\n\r\n      if (head.x === food.x && head.y === food.y) {\r\n        handleFoodConsumption(food.type);\r\n        setFood(generateFood());\r\n        return newSnake;\r\n      }\r\n\r\n      return newSnake.slice(0, -1);\r\n    });\r\n  }, [direction, isPaused, isGameOver, food, hasShield, handleFoodConsumption, generateFood, playSound]);\r\n\r\n  // Game loop\r\n  useEffect(() => {\r\n    if (!isGameOver && !isPaused) {\r\n      gameLoopRef.current = setTimeout(moveSnake, gameSpeed);\r\n    }\r\n    return () => clearTimeout(gameLoopRef.current);\r\n  }, [moveSnake, gameSpeed, isGameOver, isPaused]);\r\n\r\n  // Update high score & Barn Foto Snacke popup trigger\r\n  useEffect(() => {\r\n    if (score > highScore) {\r\n      setHighScore(score);\r\n      localStorage.setItem('snakeHighScore', score.toString());\r\n    }\r\n\r\n    if (!imagePopupVisible && score > 0 && score >= nextImageScoreThreshold && NUM_BARN_FOTOS > 0) {\r\n      setImagePopupVisible(true);\r\n      setCurrentRandomImageName(getRandomImageName()); // Set a single random image for the popup session\r\n      playSound(660, 200); \r\n      setNextImageScoreThreshold(prevThreshold => prevThreshold + IMAGE_POPUP_SCORE_INTERVAL);\r\n      \r\n      setTimeout(() => {\r\n        setImagePopupVisible(false);\r\n      }, IMAGE_POPUP_DURATION);\r\n    }\r\n  }, [score, highScore, nextImageScoreThreshold, imagePopupVisible, playSound]);\r\n\r\n  // Increase speed based on score\r\n  useEffect(() => {\r\n    const newSpeed = Math.max(50, INITIAL_SPEED - Math.floor(score / 5) * (INITIAL_SPEED * SPEED_INCREMENT));\r\n    setGameSpeed(newSpeed);\r\n  }, [score]);\r\n\r\n  // Keyboard controls\r\n  useEffect(() => {\r\n    const handleKeyPress = (e) => {\r\n      if (isGameOver) return;\r\n      \r\n      switch (e.key) {\r\n        case 'ArrowUp': case 'w': case 'W':\r\n          e.preventDefault(); if (direction !== 'DOWN') setDirection('UP'); break;\r\n        case 'ArrowDown': case 's': case 'S':\r\n          e.preventDefault(); if (direction !== 'UP') setDirection('DOWN'); break;\r\n        case 'ArrowLeft': case 'a': case 'A':\r\n          e.preventDefault(); if (direction !== 'RIGHT') setDirection('LEFT'); break;\r\n        case 'ArrowRight': case 'd': case 'D':\r\n          e.preventDefault(); if (direction !== 'LEFT') setDirection('RIGHT'); break;\r\n        case ' ':\r\n          e.preventDefault(); setIsPaused(prev => !prev); break;\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeyPress);\r\n    return () => window.removeEventListener('keydown', handleKeyPress);\r\n  }, [direction, isGameOver]);\r\n\r\n  // Touch controls\r\n  const handleTouchStart = (e) => {\r\n    const touch = e.touches[0];\r\n    setTouchStart({ x: touch.clientX, y: touch.clientY });\r\n  };\r\n\r\n  const handleTouchEnd = (e) => {\r\n    if (isGameOver) return;\r\n    const touch = e.changedTouches[0];\r\n    const deltaX = touch.clientX - touchStart.x;\r\n    const deltaY = touch.clientY - touchStart.y;\r\n    const minSwipeDistance = 30;\r\n    if (Math.abs(deltaX) > Math.abs(deltaY)) {\r\n      if (Math.abs(deltaX) > minSwipeDistance) {\r\n        if (deltaX > 0 && direction !== 'LEFT') setDirection('RIGHT');\r\n        else if (deltaX < 0 && direction !== 'RIGHT') setDirection('LEFT');\r\n      }\r\n    } else {\r\n      if (Math.abs(deltaY) > minSwipeDistance) {\r\n        if (deltaY > 0 && direction !== 'UP') setDirection('DOWN');\r\n        else if (deltaY < 0 && direction !== 'DOWN') setDirection('UP');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Reset game\r\n  const resetGame = () => {\r\n    setSnake(INITIAL_SNAKE);\r\n    setFood(generateFood()); \r\n    setDirection(INITIAL_DIRECTION);\r\n    setScore(0);\r\n    setIsGameOver(false);\r\n    setIsPaused(false);\r\n    setGameSpeed(INITIAL_SPEED);\r\n    setHasShield(false);\r\n    setScoreMultiplier(1);\r\n    setCurrentThemeIndex(0); \r\n    setImagePopupVisible(false); \r\n    setCurrentRandomImageName(''); \r\n    setNextImageScoreThreshold(IMAGE_POPUP_SCORE_INTERVAL);\r\n  };\r\n\r\n  // Virtual controls\r\n  const handleDirectionChange = (newDirection) => {\r\n    if (isGameOver) return;\r\n    const opposites = { 'UP': 'DOWN', 'DOWN': 'UP', 'LEFT': 'RIGHT', 'RIGHT': 'LEFT' };\r\n    if (direction !== opposites[newDirection]) setDirection(newDirection);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 p-4 flex flex-col md:flex-row items-center md:items-start justify-center gap-4 md:gap-8\">\r\n      {/* Game Area Column */}\r\n      <div className=\"w-full md:max-w-md lg:max-w-lg flex-shrink-0\">\r\n        <div className=\"mx-auto\"> \r\n            {/* Header */}\r\n            <div className=\"text-center mb-6\">\r\n            <h1 className=\"text-4xl md:text-5xl font-bold text-white mb-2 bg-gradient-to-r from-indigo-400 to-purple-400 bg-clip-text text-transparent\">\r\n                Snake Game\r\n            </h1>\r\n            <div className=\"flex justify-center items-center gap-6 text-white\">\r\n                <div className=\"text-lg\">Score: <span className=\"font-bold text-yellow-400\">{score}</span></div>\r\n                <div className=\"text-lg\">High: <span className=\"font-bold text-purple-400\">{highScore}</span></div>\r\n            </div>\r\n            </div>\r\n\r\n            {/* Status Indicators */}\r\n            <div className=\"flex justify-center items-center gap-4 mb-4 h-8\"> \r\n            {hasShield && (\r\n                <div className=\"bg-blue-500 text-white px-3 py-1 rounded-full text-sm animate-pulse\">\r\n                🛡️ Shield Active\r\n                </div>\r\n            )}\r\n            {scoreMultiplier > 1 && (\r\n                <div className=\"bg-yellow-500 text-white px-3 py-1 rounded-full text-sm animate-pulse\">\r\n                ⚡ 2x Multiplier\r\n                </div>\r\n            )}\r\n            {isPaused && !isGameOver && (\r\n                <div className=\"bg-orange-500 text-white px-3 py-1 rounded-full text-sm\">\r\n                ⏸️ Paused\r\n                </div>\r\n            )}\r\n            </div>\r\n\r\n            {/* Game Board */}\r\n            <div className=\"relative\">\r\n            <div \r\n                className=\"grid gap-0 bg-gray-800 border-2 border-gray-600 rounded-lg p-2 mb-4 aspect-square max-w-md mx-auto\"\r\n                style={{ gridTemplateColumns: `repeat(${GRID_SIZE}, 1fr)` }}\r\n                onTouchStart={handleTouchStart}\r\n                onTouchEnd={handleTouchEnd}\r\n            >\r\n                {Array.from({ length: GRID_SIZE * GRID_SIZE }).map((_, index) => {\r\n                const x = index % GRID_SIZE;\r\n                const y = Math.floor(index / GRID_SIZE);\r\n                const isSnakeHead = snake.length > 0 && snake[0].x === x && snake[0].y === y;\r\n                const isSnakeBody = snake.slice(1).some(segment => segment.x === x && segment.y === y);\r\n                const isFood = food.x === x && food.y === y;\r\n\r\n                return (\r\n                    <div\r\n                    key={index}\r\n                    className={`\r\n                        aspect-square rounded-sm transition-all duration-150\r\n                        ${isSnakeHead ? `${currentSnakeColor.head} animate-pulse shadow-lg` : ''}\r\n                        ${isSnakeBody ? `${currentSnakeColor.body} transform scale-95` : ''}\r\n                        ${isFood ? '' : ''} \r\n                        ${!isSnakeHead && !isSnakeBody && !isFood ? 'bg-gray-700' : ''}\r\n                    `}\r\n                    >\r\n                    {isFood && (\r\n                        <span className=\"text-2xl flex items-center justify-center h-full w-full animate-pulse\">\r\n                        {POWER_UPS[food.type].icon}\r\n                        </span>\r\n                    )}\r\n                    </div>\r\n                );\r\n                })}\r\n            </div>\r\n\r\n            {/* Game Over Overlay - remains relative to game board area */}\r\n            {isGameOver && (\r\n                <div className=\"absolute inset-0 bg-black bg-opacity-75 flex items-center justify-center rounded-lg z-20\">\r\n                <div className=\"text-center text-white\">\r\n                    <h2 className=\"text-3xl font-bold mb-4\">Game Over!</h2>\r\n                    <p className=\"text-xl mb-4\">Final Score: {score}</p>\r\n                    <button\r\n                    onClick={resetGame}\r\n                    className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-6 py-3 rounded-lg font-semibold transition-colors flex items-center gap-2 mx-auto\"\r\n                    >\r\n                    <RotateCcw size={20} />\r\n                    Play Again\r\n                    </button>\r\n                </div>\r\n                </div>\r\n            )}\r\n            </div>\r\n\r\n            {/* Controls */}\r\n            <div className=\"flex justify-center items-center gap-4 mb-6\">\r\n                <button onClick={() => setIsPaused(!isPaused)} disabled={isGameOver} className=\"bg-green-600 hover:bg-green-700 disabled:bg-gray-600 text-white px-4 py-2 rounded-lg font-semibold transition-colors flex items-center gap-2\">\r\n                    {isPaused ? <Play size={20} /> : <Pause size={20} />}\r\n                    {isPaused ? 'Resume' : 'Pause'}\r\n                </button>\r\n                <button onClick={resetGame} className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-semibold transition-colors flex items-center gap-2\">\r\n                    <RotateCcw size={20} /> Reset\r\n                </button>\r\n                <button onClick={() => setIsMuted(!isMuted)} className=\"bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg font-semibold transition-colors flex items-center gap-2\">\r\n                    {isMuted ? <VolumeX size={20} /> : <Volume2 size={20} />}\r\n                </button>\r\n            </div>\r\n\r\n            {/* Virtual D-Pad for Mobile */}\r\n            <div className=\"md:hidden\">\r\n                 <div className=\"grid grid-cols-3 gap-2 max-w-xs mx-auto\">\r\n                    <div></div>\r\n                    <button onClick={() => handleDirectionChange('UP')} className=\"bg-gray-700 hover:bg-gray-600 text-white p-4 rounded-lg flex items-center justify-center transition-colors active:bg-gray-500 aspect-square\"><ChevronUp size={24} /></button>\r\n                    <div></div>\r\n                    <button onClick={() => handleDirectionChange('LEFT')} className=\"bg-gray-700 hover:bg-gray-600 text-white p-4 rounded-lg flex items-center justify-center transition-colors active:bg-gray-500 aspect-square\"><ChevronLeft size={24} /></button>\r\n                    <div className=\"flex items-center justify-center aspect-square\"> \r\n                        <button onClick={() => setIsPaused(p => !p)} disabled={isGameOver} className=\"bg-gray-700 hover:bg-gray-600 text-white p-3 rounded-full flex items-center justify-center transition-colors active:bg-gray-500 h-12 w-12\">\r\n                            {isPaused ? <Play size={18} /> : <Pause size={18} />}\r\n                        </button>\r\n                    </div>\r\n                    <button onClick={() => handleDirectionChange('RIGHT')} className=\"bg-gray-700 hover:bg-gray-600 text-white p-4 rounded-lg flex items-center justify-center transition-colors active:bg-gray-500 aspect-square\"><ChevronRight size={24} /></button>\r\n                    <div></div>\r\n                    <button onClick={() => handleDirectionChange('DOWN')} className=\"bg-gray-700 hover:bg-gray-600 text-white p-4 rounded-lg flex items-center justify-center transition-colors active:bg-gray-500 aspect-square\"><ChevronDown size={24} /></button>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Instructions */}\r\n            <div className=\"text-center text-gray-400 text-sm mt-8\">\r\n                <p className=\"mb-1\">🎮 Use arrow keys, WASD, or swipe to move</p>\r\n                <p className=\"mb-1\">\r\n                    {POWER_UPS.PIZZA.icon} & {POWER_UPS.HAMBURGER.icon}: Standard Food | {POWER_UPS.SPEED.icon} <span className=\"text-green-400\">{POWER_UPS.SPEED.description}</span> | {POWER_UPS.MULTIPLIER.icon} <span className=\"text-yellow-400\">{POWER_UPS.MULTIPLIER.description}</span> | {POWER_UPS.SHIELD.icon} <span className=\"text-blue-400\">{POWER_UPS.SHIELD.description}</span>\r\n                </p>\r\n                <p>Press SPACE to pause • Speed increases every 5 points</p>\r\n            </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Side Panel for Barn Foto Snacke (conditionally rendered) */}\r\n      {imagePopupVisible && NUM_BARN_FOTOS > 0 && (\r\n        <div className=\"w-full md:w-64 lg:w-80 xl:w-96 bg-gray-800 p-4 rounded-lg shadow-xl flex flex-col items-center justify-center self-center md:self-start mt-6 md:mt-0 order-first md:order-last\">\r\n          <div className=\"bg-white p-3 md:p-4 rounded-xl shadow-2xl w-full transform transition-all\">\r\n            {currentRandomImageName && (\r\n              <img \r\n                key={currentRandomImageName} // Key helps React differentiate if the image name changes for some reason, ensuring re-render\r\n                src={`/barnfotosnake/${currentRandomImageName}`} \r\n                alt=\"Barn Foto Snacke Time!\" \r\n                className=\"w-full h-auto rounded-lg object-contain max-h-[60vh] md:max-h-[calc(100vh-250px)] animate-pulse\"\r\n                onError={(e) => { \r\n                  e.target.style.display='none'; \r\n                  const parent = e.target.parentNode;\r\n                  if (parent) {\r\n                      const errorText = document.createElement('p');\r\n                      errorText.textContent = `Image ${currentRandomImageName} not found! Make sure it is in public/barnfotosnake/`;\r\n                      errorText.className = 'text-red-500 text-center p-2';\r\n                      if (!parent.querySelector('.error-image-text')) {\r\n                        errorText.classList.add('error-image-text');\r\n                        parent.insertBefore(errorText, e.target);\r\n                      }\r\n                  }\r\n                }}\r\n              />\r\n            )}\r\n            <p className=\"text-center text-lg md:text-xl font-bold mt-3 text-purple-600 animate-bounce\">Snacke Time!</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SnakeGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}